/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppCafe;

/**
 *
 * @author Andika Risky Septiawan
 */
import java.sql.*;
import javax.swing.table.DefaultTableModel;
public class LaporanPendapatanManajer extends javax.swing.JFrame {
    String sql;
    Connection conn;
    Statement stmt;
    ResultSet rs;
    /**
     * Creates new form LaporanPendapatanManajer
     */
    public LaporanPendapatanManajer() throws SQLException {
        initComponents();
        
        Koneksi DB = new Koneksi();
        DB.config();
        conn = DB.conn;
        stmt = DB.stm;
        
        semua_data();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLaporan = new javax.swing.JTable();
        cmbPilihan = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Snap ITC", 2, 24)); // NOI18N
        jLabel1.setText("Laporan Cafe Bisa Ngopi");

        tblLaporan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblLaporan);

        cmbPilihan.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        cmbPilihan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Harian", "Bulanan" }));
        cmbPilihan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPilihanItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 204, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbPilihan, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addComponent(cmbPilihan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPilihanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPilihanItemStateChanged
        // TODO add your handling code here:
        if (cmbPilihan.getSelectedItem().equals("Harian")) {
            try {
                semua_data();
            } catch (SQLException ex) {
            }
        } else if(cmbPilihan.getSelectedItem().equals("Bulanan")){
            try {
                berdasarkan_bulan();
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_cmbPilihanItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LaporanPendapatanManajer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LaporanPendapatanManajer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LaporanPendapatanManajer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LaporanPendapatanManajer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new LaporanPendapatanManajer().setVisible(true);
                } catch (SQLException ex) {
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbPilihan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLaporan;
    // End of variables declaration//GEN-END:variables

    private void semua_data() throws SQLException {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Tahun-Bulan-Tanggal");
        model.addColumn("Pendapatan");
        
        sql = "SELECT YEAR(tgl_penjualan), MONTH(tgl_penjualan), DAYOFMONTH(tgl_penjualan),"
                + "SUM(total_harga) FROM penjualan GROUP BY 3";
        // command diatas memiliki arti "tampilkan (SELECT) tahun (YEAR), bulan (MONTH), 
        // dan tanggal (DayOfMonth) pada kolom tgl_penjualan, dan jumlah (SUM) pada kolom total_harga
        // di tabel (FROM) penjualan gabungkan data yang sama (GROUP BY) kolom ke 3 saat tampil (DAYOFMONTH)
        rs = stmt.executeQuery(sql);
        while (rs.next()) {
            // buat variabel baru untuk membuat format tanggal
            String tglBlnThn = rs.getString("YEAR(tgl_penjualan)") + "-" + rs.getString("MONTH(tgl_penjualan)") + 
                    "-" + rs.getString("DAYOFMONTH(tgl_penjualan)");
            model.addRow(new Object[]{tglBlnThn, rs.getString("SUM(total_harga)")});
        }
        
        tblLaporan.setModel(model);
    }
    
    private void berdasarkan_bulan() throws SQLException {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Tahun-Bulan");
        model.addColumn("Pendapatan");
        
        sql = "SELECT YEAR(tgl_penjualan), MONTH(tgl_penjualan), SUM(total_harga) FROM penjualan GROUP BY 2";
        // command diatas memiliki arti "tampilkan (SELECT) tahun (YEAR) dan bulan (MONTH), pada kolom 
        // tgl_penjualan, dan jumlah (SUM) pada kolom total_harga
        // di tabel (FROM) penjualan gabungkan data yang sama (GROUP BY) kolom ke 2 saat tampil (MONTH)
        rs = stmt.executeQuery(sql);
        while (rs.next()) {
            // buat variabel baru untuk membuat format tanggal
            String tglBlnThn = rs.getString("YEAR(tgl_penjualan)") + "-" + rs.getString("MONTH(tgl_penjualan)");
            model.addRow(new Object[]{tglBlnThn, rs.getString("SUM(total_harga)")});
        }
        
        tblLaporan.setModel(model);
    }
}
