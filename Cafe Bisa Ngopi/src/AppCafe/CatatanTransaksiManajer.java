/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppCafe;

/**
 *
 * @author Andika Risky Septiawan
 */

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class CatatanTransaksiManajer extends javax.swing.JFrame {
    String sql;
    Connection conn;
    Statement stmt;
    ResultSet rs;
    int jml_user;
    int jml_tanggal;

    /**
     * Creates new form TransaksiNamaPegawai
     */
    public CatatanTransaksiManajer() throws SQLException {
        initComponents();
        
        Koneksi DB = new Koneksi();
        DB.config();
        conn = DB.conn;
        stmt = DB.stm;
        
        hitung_user_tanggal();
        load_table_semua();
        load_combobox_nama();
        load_combobox_tanggal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCatatanTransaksi = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbIdTransaksi = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        rbSemua = new javax.swing.JRadioButton();
        rbNamaKasir = new javax.swing.JRadioButton();
        cmbNamaKasir = new javax.swing.JComboBox<>();
        rbTanggal = new javax.swing.JRadioButton();
        cmbTanggal = new javax.swing.JComboBox<>();
        btnTampilkan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Snap ITC", 2, 24)); // NOI18N
        jLabel1.setText("Catatan Transaksi Cafe Bisa Ngopi");

        tblCatatanTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCatatanTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCatatanTransaksiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCatatanTransaksi);

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        jLabel2.setText("Id Transaksi ");

        tbIdTransaksi.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        tbIdTransaksi.setEnabled(false);
        jScrollPane2.setViewportView(tbIdTransaksi);

        jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        jButton1.setText("Detail Transaksi");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        buttonGroup1.add(rbSemua);
        rbSemua.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        rbSemua.setSelected(true);
        rbSemua.setText("Semua");
        rbSemua.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbSemuaItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rbNamaKasir);
        rbNamaKasir.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        rbNamaKasir.setText("Nama Kasir");
        rbNamaKasir.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbNamaKasirItemStateChanged(evt);
            }
        });

        cmbNamaKasir.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        cmbNamaKasir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbNamaKasir.setEnabled(false);
        cmbNamaKasir.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNamaKasirItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rbTanggal);
        rbTanggal.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        rbTanggal.setText("Tanggal");
        rbTanggal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbTanggalItemStateChanged(evt);
            }
        });
        rbTanggal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbTanggalMouseClicked(evt);
            }
        });

        cmbTanggal.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        cmbTanggal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbTanggal.setEnabled(false);

        btnTampilkan.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        btnTampilkan.setText("Tampilkan");
        btnTampilkan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTampilkanMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbSemua)
                                .addGap(18, 18, 18)
                                .addComponent(rbNamaKasir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbNamaKasir, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rbTanggal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btnTampilkan)
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rbSemua)
                                .addComponent(rbNamaKasir))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmbNamaKasir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rbTanggal))
                            .addComponent(cmbTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)))
                    .addComponent(btnTampilkan))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        String Id_transaksi = tbIdTransaksi.getText();
        
        if (Id_transaksi.equals("")) {
            JOptionPane.showMessageDialog(null, "Pilih Transaksi terlebih dahulu");
        } else {
            try {
                DetailCatatanTransaksi detail = new DetailCatatanTransaksi();
                detail.detail_transaksi(Id_transaksi);
                detail.setVisible(true);
                this.setVisible(false);
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void tblCatatanTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCatatanTransaksiMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblCatatanTransaksi.getModel();
        int baris = tblCatatanTransaksi.rowAtPoint(evt.getPoint());
        String id_transaksi = model.getValueAt(baris, 1).toString();
        
        tbIdTransaksi.setText(id_transaksi);
    }//GEN-LAST:event_tblCatatanTransaksiMouseClicked

    private void rbSemuaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbSemuaItemStateChanged
        // TODO add your handling code here:
        if (rbSemua.isSelected()) {
            cmbNamaKasir.setEnabled(false);
            cmbTanggal.setEnabled(false);
            
            try {
                load_table_semua();
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_rbSemuaItemStateChanged

    private void rbNamaKasirItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbNamaKasirItemStateChanged
        // TODO add your handling code here:
        if (rbNamaKasir.isSelected()) {
            cmbNamaKasir.setEnabled(true);
            cmbTanggal.setEnabled(false);
        }
    }//GEN-LAST:event_rbNamaKasirItemStateChanged

    private void rbTanggalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbTanggalMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_rbTanggalMouseClicked

    private void cmbNamaKasirItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNamaKasirItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbNamaKasirItemStateChanged

    private void btnTampilkanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTampilkanMouseClicked
        // TODO add your handling code here:
        if (rbNamaKasir.isSelected()) {
            load_table_nama();
        } else if (rbTanggal.isSelected()){
            load_table_tanggal();
        }
    }//GEN-LAST:event_btnTampilkanMouseClicked

    private void rbTanggalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbTanggalItemStateChanged
        // TODO add your handling code here:
        if (rbTanggal.isSelected()) {
            cmbTanggal.setEnabled(true);
            cmbNamaKasir.setEnabled(false);
        }
    }//GEN-LAST:event_rbTanggalItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CatatanTransaksiManajer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CatatanTransaksiManajer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CatatanTransaksiManajer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CatatanTransaksiManajer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CatatanTransaksiManajer().setVisible(true);
                } catch (SQLException ex) {
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTampilkan;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbNamaKasir;
    private javax.swing.JComboBox<String> cmbTanggal;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbNamaKasir;
    private javax.swing.JRadioButton rbSemua;
    private javax.swing.JRadioButton rbTanggal;
    private javax.swing.JTextPane tbIdTransaksi;
    private javax.swing.JTable tblCatatanTransaksi;
    // End of variables declaration//GEN-END:variables

    private void load_table_semua() throws SQLException{
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No.");
        model.addColumn("Id Transaksi");
        model.addColumn("tgl Waktu");
        model.addColumn("Total Harga");
        model.addColumn("uang Pembeli");
        model.addColumn("Kembalian");
        model.addColumn("Nomor Meja");
        
        try {
            sql = "SELECT * FROM penjualan";
            rs = stmt.executeQuery(sql);
            int no = 1;
            while (rs.next()) {
                model.addRow(new Object[] {no++, rs.getString("id_penjualan"), rs.getString("tgl_penjualan"), 
                    rs.getString("total_harga"), rs.getString("uang_pembeli"), rs.getString("kembalian"), 
                    rs.getString("nomor_meja") });
            }
        } catch (Exception e) {
        }
        tblCatatanTransaksi.setModel(model);
    }

    private void hitung_user_tanggal() throws SQLException {
        sql = "SELECT * FROM user WHERE role_id = 2";
        rs = stmt.executeQuery(sql);
        while (rs.next()) {            
            jml_user = jml_user + 1;
        }
        
        sql = "SELECT DATE(tgl_penjualan) FROM penjualan";
        rs = stmt.executeQuery(sql);
        while (rs.next()) {            
            jml_tanggal = jml_tanggal + 1;
        }
    }
    
    private void load_combobox_nama() throws SQLException {
        cmbNamaKasir.removeAllItems();
        
        try {
            String[] namaKasir = new String[jml_user];
            int jmlDataKasir = 0;
            int cmbJmlKasir = 0;

            sql = "SELECT * FROM user WHERE role_id = 2";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {            
                namaKasir[jmlDataKasir++] = rs.getString("nama_user");
                cmbNamaKasir.addItem(namaKasir[cmbJmlKasir++]);
            }
        } catch (Exception e) {
        }
    }

    private void load_combobox_tanggal() {
        cmbTanggal.removeAllItems();
        try {
            String[] tanggal = new String[jml_tanggal];
            int jmlDataTanggal = 0;
            int cmbJmlTanggal = 0;

            sql = "SELECT DATE(tgl_penjualan) FROM penjualan GROUP BY DATE(tgl_penjualan)";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {            
                tanggal[jmlDataTanggal++] = rs.getString("DATE(tgl_penjualan)");
                cmbTanggal.addItem(tanggal[cmbJmlTanggal++]);
            }
        } catch (Exception e) {
        }
    }

    private void load_table_nama() {
        // Mengambil model dari tabel
        DefaultTableModel model = (DefaultTableModel) tblCatatanTransaksi.getModel();
        //menghapus semua data pada tabel kecuali judul/kolom
        if (tblCatatanTransaksi.getRowCount() > 0) {
                for (int i = tblCatatanTransaksi.getRowCount() - 1; i > -1; i--) {
                    model.removeRow(i);
                 }
            }
        int no = 1;
         
        String[] namaKasir = new String[jml_user];
        Integer[] idKasir = new Integer[jml_user];
        int jmlDataKasir = 0;
        int jmlIdKasir = 0;
        
        sql = "SELECT * FROM user WHERE role_id = 2";
        try {
            rs = stmt.executeQuery(sql);
            while (rs.next()) {            
            namaKasir[jmlDataKasir++] = rs.getString("nama_user");
            idKasir[jmlIdKasir++] = rs.getInt("id_user");
        }
        } catch (SQLException e) {
        }
       
        for (int i = 0; i < namaKasir.length; i++) {
            if (cmbNamaKasir.getSelectedItem().equals(namaKasir[i])) {
                int id_kasir = idKasir[i];
                
                try {
                    sql = "SELECT * FROM penjualan WHERE id_user = " + id_kasir;
                    rs = stmt.executeQuery(sql);
                    while (rs.next()) {
                        model.addRow(new Object[] {no++, rs.getString("id_penjualan"), rs.getString("tgl_penjualan"), 
                            rs.getString("total_harga"), rs.getString("uang_pembeli"), rs.getString("kembalian"), 
                            rs.getString("nomor_meja") });
                    }
                } catch (Exception e) {
                }
            }
        }
        
        tblCatatanTransaksi.setModel(model);
    }

    private void load_table_tanggal() {
        // Mengambil model dari tabel
        DefaultTableModel model = (DefaultTableModel) tblCatatanTransaksi.getModel();
        //menghapus semua data pada tabel kecuali judul/kolom
        if (tblCatatanTransaksi.getRowCount() > 0) {
                for (int i = tblCatatanTransaksi.getRowCount() - 1; i > -1; i--) {
                    model.removeRow(i);
                 }
            }
        int no = 1;
        
        sql = "SELECT * FROM penjualan WHERE DATE(tgl_penjualan) = '" + cmbTanggal.getSelectedItem() + "'";
        try {
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[] {no++, rs.getString("id_penjualan"), rs.getString("tgl_penjualan"), 
                    rs.getString("total_harga"), rs.getString("uang_pembeli"), rs.getString("kembalian"), 
                    rs.getString("nomor_meja") });
        }
        } catch (SQLException e) {
        }
    }
}
