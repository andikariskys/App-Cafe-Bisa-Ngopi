/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppCafe;

/**
 *
 * @author Andika Risky Septiawan
 */
import java.sql.*;
import java.text.MessageFormat;
import javax.swing.JTable;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class TransaksiKasir extends javax.swing.JFrame {
    String sql;
    Connection conn;
    Statement stmt;
    ResultSet rs;
    PreparedStatement pst;
    int jumlahMenu;
    
    public void namaid(String NamaKasir, String IdKasir) throws SQLException{
        tbNamaKasir.setText(NamaKasir);
        tbIdKasir.setText(IdKasir);
    }

    /**
     * Creates new form 
     */
    public TransaksiKasir() throws SQLException {
        initComponents();
        tbJmlMenu.setText("1");
        
        Koneksi DB = new Koneksi();
        DB.config();
        conn = DB.conn;
        stmt = DB.stm;
        
        // digunakan untuk mendapatkan jumlah data menu
        jumlah_menu();
        data_combobox();
        load_table();
        bersihkan_tabel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbMenu = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblTransaksi = new javax.swing.JTable();
        btnKembalian = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbTotalTransaksi = new javax.swing.JTextPane();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbUangPembeli = new javax.swing.JTextPane();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tbKembalian = new javax.swing.JTextPane();
        jLabel9 = new javax.swing.JLabel();
        btnTambahTransaksi = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbNamaKasir = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbJmlMenu = new javax.swing.JTextPane();
        btnUpdateTransaksi = new javax.swing.JButton();
        btnHapusTransaksi = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbIdKasir = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        btnBersihkanTabel = new javax.swing.JButton();
        btnTransaksiKasir = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbNomorMeja = new javax.swing.JTextPane();
        jLabel11 = new javax.swing.JLabel();
        rbMaks4 = new javax.swing.JRadioButton();
        rbMaks8 = new javax.swing.JRadioButton();
        rbMaks12 = new javax.swing.JRadioButton();
        btnCetakTransaksi = new javax.swing.JButton();

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable3.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable3AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Snap ITC", 2, 24)); // NOI18N
        jLabel1.setText("Transaksi Cafe Bisa Ngopi");

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel2.setText("Nama Menu");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        cmbMenu.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel3.setText("Jumlah");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        tblTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        tblTransaksi.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblTransaksiAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTransaksiMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblTransaksi);

        btnKembalian.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        btnKembalian.setText("Kembalian");
        btnKembalian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnKembalianMouseClicked(evt);
            }
        });

        tbTotalTransaksi.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        tbTotalTransaksi.setEnabled(false);
        jScrollPane4.setViewportView(tbTotalTransaksi);

        jLabel7.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel7.setText("Total Transaksi");

        tbUangPembeli.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jScrollPane8.setViewportView(tbUangPembeli);

        jLabel8.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel8.setText("Uang Pembeli");

        tbKembalian.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        tbKembalian.setEnabled(false);
        jScrollPane9.setViewportView(tbKembalian);

        jLabel9.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel9.setText("Kembalian");

        btnTambahTransaksi.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        btnTambahTransaksi.setText("Tambah Transaksi");
        btnTambahTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTambahTransaksiMouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel4.setText("Nama Kasir");

        tbNamaKasir.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        tbNamaKasir.setEnabled(false);
        jScrollPane1.setViewportView(tbNamaKasir);

        jScrollPane2.setViewportView(tbJmlMenu);

        btnUpdateTransaksi.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        btnUpdateTransaksi.setText("Update Transaksi");
        btnUpdateTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateTransaksiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdateTransaksiMouseEntered(evt);
            }
        });

        btnHapusTransaksi.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        btnHapusTransaksi.setText("Hapus Transaksi");
        btnHapusTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHapusTransaksiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHapusTransaksiMouseEntered(evt);
            }
        });

        tbIdKasir.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        tbIdKasir.setEnabled(false);
        jScrollPane3.setViewportView(tbIdKasir);

        jLabel5.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel5.setText("Id kasir");

        btnBersihkanTabel.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        btnBersihkanTabel.setText("Bersihkan Tabel");
        btnBersihkanTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBersihkanTabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBersihkanTabelMouseEntered(evt);
            }
        });

        btnTransaksiKasir.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        btnTransaksiKasir.setText("Transaksi Kasir");
        btnTransaksiKasir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTransaksiKasirMouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel10.setText("Nomor Meja");

        tbNomorMeja.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        tbNomorMeja.setEnabled(false);
        jScrollPane6.setViewportView(tbNomorMeja);

        jLabel11.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel11.setText("Kapasias Meja");

        buttonGroup1.add(rbMaks4);
        rbMaks4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        rbMaks4.setText("Maks. 4");

        buttonGroup1.add(rbMaks8);
        rbMaks8.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        rbMaks8.setText("Maks. 8");

        buttonGroup1.add(rbMaks12);
        rbMaks12.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        rbMaks12.setText("Maks. 12");

        btnCetakTransaksi.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        btnCetakTransaksi.setText("Cetak Transaksi");
        btnCetakTransaksi.setEnabled(false);
        btnCetakTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCetakTransaksiMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTransaksiKasir)
                        .addGap(65, 65, 65)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnUpdateTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnHapusTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnBersihkanTabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(23, 23, 23)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabel7)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel10)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jLabel8))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(97, 97, 97)
                                                    .addComponent(jLabel9)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addGap(18, 18, 18)
                                            .addComponent(cmbMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnTambahTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnKembalian, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnCetakTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(rbMaks4)
                                .addGap(18, 18, 18)
                                .addComponent(rbMaks8)
                                .addGap(18, 18, 18)
                                .addComponent(rbMaks12)))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(btnTransaksiKasir))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(cmbMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addComponent(btnTambahTransaksi))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdateTransaksi)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapusTransaksi)
                        .addGap(18, 18, 18)
                        .addComponent(btnBersihkanTabel))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(rbMaks4)
                            .addComponent(rbMaks8)
                            .addComponent(rbMaks12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKembalian))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10))))
                    .addComponent(btnCetakTransaksi))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jTable3AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable3AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable3AncestorAdded

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
        //Menampilkan data kedalam form pengisian:
    }//GEN-LAST:event_jTable3MouseClicked

    private void tblTransaksiAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblTransaksiAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tblTransaksiAncestorAdded

    private void tblTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTransaksiMouseClicked
        // TODO add your handling code here:
        //Menampilkan data kedalam form pengisian:
        String[] pilihanMenu = new String[jumlahMenu];
        int jmlDataMenu = 0;
        
        sql = "SELECT * FROM menu";
        try {
            rs = stmt.executeQuery(sql);
            while (rs.next()) {            
            pilihanMenu[jmlDataMenu++] = rs.getString("nama_menu");
        }
        } catch (SQLException e) {
        }
        
        int baris = tblTransaksi.rowAtPoint(evt.getPoint());
        
        String jumlah = tblTransaksi.getValueAt(baris, 3).toString();
        String nama_menu = tblTransaksi.getValueAt(baris, 1).toString();
        
        tbJmlMenu.setText(jumlah);
        for (int i = 0; i < pilihanMenu.length -1; i++) {
            if (nama_menu.equals(pilihanMenu[i])) {
                cmbMenu.setSelectedIndex(i);
            }
        }
    }//GEN-LAST:event_tblTransaksiMouseClicked

    private void btnTambahTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTambahTransaksiMouseClicked
        // TODO add your handling code here:
        tambah_transaksi();
    }//GEN-LAST:event_btnTambahTransaksiMouseClicked

    private void btnHapusTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHapusTransaksiMouseClicked
        // TODO add your handling code here:
        hapus_transaksi();
    }//GEN-LAST:event_btnHapusTransaksiMouseClicked

    private void btnUpdateTransaksiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateTransaksiMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateTransaksiMouseEntered

    private void btnUpdateTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateTransaksiMouseClicked
        // TODO add your handling code here:
        update_transaksi();
    }//GEN-LAST:event_btnUpdateTransaksiMouseClicked

    private void btnHapusTransaksiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHapusTransaksiMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHapusTransaksiMouseEntered

    private void btnBersihkanTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBersihkanTabelMouseClicked
        // TODO add your handling code here:
        bersihkan_tabel();
        btnCetakTransaksi.setEnabled(false);
    }//GEN-LAST:event_btnBersihkanTabelMouseClicked

    private void btnKembalianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnKembalianMouseClicked
        // TODO add your handling code here:
        // Jika button Kembalian diklik maka tombol print/cetak enable/bisa diklik
        btnCetakTransaksi.setEnabled(true);
        
        // Jika tabel transaksi masih kosong
        if (tbTotalTransaksi.getText().equals("")) {
            // Muncul MessageBox dengan pesan berikut
            JOptionPane.showMessageDialog(null, "Buat Transaksi terlebih Dahulu");
            
        // Jika belum memilih meja
        }else if (!rbMaks4.isSelected() && !rbMaks8.isSelected() && !rbMaks12.isSelected()) {
            // Muncul MessageBox dengan pesan berikut
            JOptionPane.showMessageDialog(null, "Pilih Kapasitas Meja");
        
        // Jika belum memasukkan Uang pembeli
        }else if (tbUangPembeli.getText().equals("")){
            // Muncul MessageBox dengan pesan berikut
            JOptionPane.showMessageDialog(null, "Masukkan Uang Pembeli");
            
        // Jika sudah lengkap
        } else {
            // Untuk mengambil nomor meja yang nantinya akan dipakai pembeli
            nomor_meja();
            // Untuk menghitung kembalian yang akan dimasukkan ke tabel/database
            hitung_kembalian();
            // Untuk menyimpan transaksi ke tabel/database
            simpan_table_penjualan();
            // Untuk menyimpan menu ke tabel/transaksi
            simpan_data_penjualanDetail();
            try {
                // Untuk me-refresh jika ada menu baru yang ditambahkan
                data_combobox();
            } catch (SQLException e) {
            }
        }
    }//GEN-LAST:event_btnKembalianMouseClicked

    private void btnBersihkanTabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBersihkanTabelMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBersihkanTabelMouseEntered

    private void btnTransaksiKasirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTransaksiKasirMouseClicked
        // TODO add your handling code here:
        
        try {
            CatatanTransaksiKasir catatan = new CatatanTransaksiKasir();
            catatan.namaid(tbIdKasir.getText(), tbNamaKasir.getText());
            catatan.setVisible(true);
            
            this.setVisible(false);
        } catch (SQLException ex) {
        }
        
    }//GEN-LAST:event_btnTransaksiKasirMouseClicked

    private void btnCetakTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCetakTransaksiMouseClicked
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("Transaksi Cafe Bisa Ngopi");
        MessageFormat footer = new MessageFormat("Nomor meja : " + tbNomorMeja.getText() +
                " | Total Transaksi : " + tbTotalTransaksi.getText() + " | Uang Pembeli :" +
                tbUangPembeli.getText() + " | Kembalian : " + tbKembalian.getText());
        try {
            tblTransaksi.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnCetakTransaksiMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransaksiKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransaksiKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransaksiKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransaksiKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TransaksiKasir().setVisible(true);
                } catch (SQLException ex) {
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBersihkanTabel;
    private javax.swing.JButton btnCetakTransaksi;
    private javax.swing.JButton btnHapusTransaksi;
    private javax.swing.JButton btnKembalian;
    private javax.swing.JButton btnTambahTransaksi;
    private javax.swing.JButton btnTransaksiKasir;
    private javax.swing.JButton btnUpdateTransaksi;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable3;
    private javax.swing.JRadioButton rbMaks12;
    private javax.swing.JRadioButton rbMaks4;
    private javax.swing.JRadioButton rbMaks8;
    private javax.swing.JTextPane tbIdKasir;
    private javax.swing.JTextPane tbJmlMenu;
    private javax.swing.JTextPane tbKembalian;
    private javax.swing.JTextPane tbNamaKasir;
    private javax.swing.JTextPane tbNomorMeja;
    private javax.swing.JTextPane tbTotalTransaksi;
    private javax.swing.JTextPane tbUangPembeli;
    private javax.swing.JTable tblTransaksi;
    // End of variables declaration//GEN-END:variables

    private void jumlah_menu() throws SQLException {
        sql = "SELECT * FROM menu";
        rs = stmt.executeQuery(sql);
        while (rs.next()) {            
            jumlahMenu = jumlahMenu + 1;
        }
    }

    private void load_table() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Id Menu");
        model.addColumn("Nama Menu");
        model.addColumn("Harga Menu");
        model.addColumn("jumlah");
        model.addColumn("Total Harga");
        
        tblTransaksi.setModel(model);
    }

    private void data_combobox() throws SQLException {
        cmbMenu.removeAllItems();
        try {
            String[] namaMenu = new String[jumlahMenu];
            int jmlDataMenu = 0;
            int cmbJmlMenu = 0;

            sql = "SELECT * FROM menu";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {            
                namaMenu[jmlDataMenu++] = rs.getString("nama_menu");
                cmbMenu.addItem(namaMenu[cmbJmlMenu++]);
            }
        } catch (Exception e) {
        }
    }

    private void bersihkan_tabel() {
        DefaultTableModel dataModel = (DefaultTableModel) tblTransaksi.getModel();    
            if (tblTransaksi.getRowCount() > 0) {
                for (int i = tblTransaksi.getRowCount() - 1; i > -1; i--) {
                    dataModel.removeRow(i);
                }
            }
        cmbMenu.setSelectedIndex(0);
        buttonGroup1.clearSelection();
        tbJmlMenu.setText("1");
        tbTotalTransaksi.setText("");
        tbKembalian.setText("");
        tbUangPembeli.setText("");
        tbNomorMeja.setText("");
    }

    private void update_transaksi() {
        String[] nama_menu = new String[jumlahMenu];
        String[] id_menu = new String[jumlahMenu];
        int namaMenu = 0;
        int jmlDataMenu = 0;
            
        try {
            sql = "SELECT * FROM menu";
            rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    nama_menu[namaMenu++] = rs.getString("nama_menu");
                    id_menu[jmlDataMenu++] = rs.getString("id_menu");
                }
        } catch (Exception e) {
        }
        
        int idMenu = cmbMenu.getSelectedIndex();
        int hargaMenu = 0;
        try {
            sql = "SELECT * FROM menu WHERE id_menu =" + id_menu[idMenu];
            rs = stmt.executeQuery(sql);
            while (rs.next()) {                
                hargaMenu = rs.getInt("harga_menu");
            }
        } catch (Exception e) {
        }
        
        int totalHarga = Integer.valueOf(tbJmlMenu.getText()) * hargaMenu;
        int baris = tblTransaksi.getSelectedRow();
            
        DefaultTableModel model = (DefaultTableModel) tblTransaksi.getModel();
        model.setValueAt(id_menu[idMenu], baris, 0);
        model.setValueAt(nama_menu[idMenu], baris, 1);
        model.setValueAt(hargaMenu, baris, 2);
        model.setValueAt(tbJmlMenu.getText(), baris, 3);
        model.setValueAt(totalHarga, baris, 4);
        tblTransaksi.setModel(model);
        
        //mengitung total pembayaran
        int jml_baris = model.getRowCount();
        int totalTransaksi = 0;
        for (int i = 0; i < jml_baris; i++) {
            int TotalTransaksi = Integer.valueOf(model.getValueAt(i, 4).toString());
            totalTransaksi += TotalTransaksi;
        }
        tbTotalTransaksi.setText(Integer.toString(totalTransaksi));
        
        cmbMenu.setSelectedIndex(0);
        tbJmlMenu.setText("1");
    }

    private void tambah_transaksi() {
        // Mendeklarasikan variabel String array terlebih dahulu untuk menyimpan banyak data
        String[] nama_menu = new String[jumlahMenu];
        String[] id_menu = new String[jumlahMenu];
        // mendeklarasikan variabel untuk membuat start perulangan
        int namaMenu = 0;
        int jmlDataMenu = 0;
            
        try {
            // Membuat Command SQL untuk menampilkan data yang memiliki jumlah stok diatas 1
            sql = "SELECT * FROM menu";
            // menjalankan command yang telah dibuat
            rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    // mengambil data dari database dan memasukkan data tersebut kedalam variabel String Array
                    nama_menu[namaMenu++] = rs.getString("nama_menu");
                    id_menu[jmlDataMenu++] = rs.getString("id_menu");
                }
        } catch (Exception e) {
        }
        
        // mengambil nomor baris yang telah dipilih/diklik
        int idMenu = cmbMenu.getSelectedIndex();
        // mendeklarasikan variabel untuk membuat start perulangan
        int hargaMenu = 0;
        try {
            // mengambil data dari tabel pada database berdasarkan id yang dipilih
            sql = "SELECT * FROM menu WHERE id_menu =" + id_menu[idMenu];
            // menjalankan command yang telah dibuat
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                // memasukkan harga menu yang telah didapat kedalam variabel hargaMenu
                hargaMenu = rs.getInt("harga_menu");
            }
        } catch (Exception e) {
        }
        
        // Membuat variabel total harga yang ber-isi " jumlah menu x harga menu " yang dipilih
        int totalHarga = Integer.valueOf(tbJmlMenu.getText()) * hargaMenu;
            
        // Membuat object tabel baru
        DefaultTableModel model = (DefaultTableModel) tblTransaksi.getModel();
        // Memasukkan data kedalam baris pada tabel
        model.addRow(new Object[] {id_menu[idMenu], nama_menu[idMenu], hargaMenu, tbJmlMenu.getText(), totalHarga});
        // mengatur hasil ubahan/tambahan pada tabel
        tblTransaksi.setModel(model);
        
        //mengitung total pembayaran
        int jml_baris = model.getRowCount();
        int totalTransaksi = 0;
        for (int i = 0; i < jml_baris; i++) {
            int TotalTransaksi = Integer.valueOf(model.getValueAt(i, 4).toString());
            totalTransaksi += TotalTransaksi;
        }
        tbTotalTransaksi.setText(Integer.toString(totalTransaksi));
        
        // jika sudah berhasil masuk kedalam tabel maka otomatis combobox memilih pilihan yang pertama / default
        cmbMenu.setSelectedIndex(0);
        // dan textbox berubah menjadi angka 1 / default
        tbJmlMenu.setText("1");
    }

    private void hapus_transaksi() {
        int baris = tblTransaksi.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblTransaksi.getModel();
        
        model.removeRow(baris);
        tblTransaksi.setModel(model);
        
        //mengitung total pembayaran
        int jml_baris = model.getRowCount();
        int totalTransaksi = 0;
        for (int i = 0; i < jml_baris; i++) {
            int TotalTransaksi = Integer.valueOf(model.getValueAt(i, 4).toString());
            totalTransaksi += TotalTransaksi;
        }
        tbTotalTransaksi.setText(Integer.toString(totalTransaksi));
    }

    private void simpan_table_penjualan() {
        // Memasukkan data ke tabel penjualan
        try {
            sql = "INSERT INTO penjualan VALUES (NULL, current_timestamp(), " + tbIdKasir.getText() +
                    ", " + tbTotalTransaksi.getText() + ", " + tbUangPembeli.getText() + ", " + 
                    tbKembalian.getText()+ ", " +tbNomorMeja.getText() +")";
            pst = conn.prepareStatement(sql);
            pst.execute();
        } catch (Exception e) {
        }
    }

    private void simpan_data_penjualanDetail() {
        DefaultTableModel model = (DefaultTableModel) tblTransaksi.getModel();
        
        // mengambil id transaksi yang dimasukkan
        String id_penjualan = null;
        try {
            sql = "SELECT * FROM penjualan ORDER BY id_penjualan DESC LIMIT 1";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                id_penjualan = rs.getString("id_penjualan");
            }
        } catch (Exception e) {
        }
        
        int jml_baris = model.getRowCount();
        for (int i = 0; i < jml_baris; i++) {
            try {
                sql = "INSERT INTO penjualan_detail VALUES (NULL, " + id_penjualan + ", '" + 
                        model.getValueAt(i, 1) + "', " + model.getValueAt(i, 3) + ", " +
                        model.getValueAt(i, 4) + ")";
                pst = conn.prepareStatement(sql);
                pst.execute();
            } catch (Exception e) {
            }
        }
    }

    private void hitung_kembalian() {
        String UangPembeli = tbUangPembeli.getText();
        String TotalTransaksi = tbTotalTransaksi.getText();
        
        int kmb = Integer.valueOf(UangPembeli) - Integer.valueOf(TotalTransaksi);
        String Kembalian = String.valueOf(kmb);
        
        tbKembalian.setText(Kembalian);
    }

    private void nomor_meja() {
        String kapasitas = null;
        if (rbMaks4.isSelected()) {
            kapasitas = "4";
        } else if (rbMaks8.isSelected()) {
            kapasitas = "8";
        } else if (rbMaks12.isSelected()) {
            kapasitas = "12";
        }
        
        try {
            sql = "SELECT * FROM meja WHERE kapasitas = " + kapasitas + " ORDER BY RAND() LIMIT 1";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {                
                tbNomorMeja.setText(rs.getString("nomor_meja"));
            }
        } catch (Exception e) {
        }
    }
}
